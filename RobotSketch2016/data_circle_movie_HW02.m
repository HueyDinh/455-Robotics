function [q] = data_circle_movie_HW02(dh)
% HEADER                                                                       
%
% Drexel MEM455 - Introduction to Robotics
% Fall 2021
%--------------------------------------------------------------------------
% DESCRIPTION:
%       Generates joint angles that simultaneously moves each R joint so
%       the effector move in a circle about (3,3) with radius 3
%
% INPUTS*: (read in as a file)
%       dh = structure containing robot and drawing data 
%
% OUTPUTS:
%       q  = array of joint angles, one row for each robot configuration (in this case, # row = #)
%--------------------------------------------------------------------------
% OTHER INFORMATION:
%       n_inc = number of snapshots generated by the movie script
%--------------------------------------------------------------------------
%
% BEGIN{GENERATE JOINT DISPLACEMENTS}******************************************
xc=3; % Circle's center x-position
yc=3; % Circle's center y-position
r=3; % Circle's radius
dh.elbowplus = 1; % Add the attribute dh.elbowplus to the dh struct (not in the original data script)
n_inc  = 10; % Number of rendering snapshots MINUS 1.
N = length(dh.t); % Extract the dimension of dh.t (# Joints +2)
q = zeros(n_inc,N); % Output initialized as placeholder array with defined dimensions, no data yet
for i = 0:n_inc % Loop from 0 due to the formula
    dh.Xe = [xc-r*cos(2*pi*i/n_inc),yc-r*sin(2*pi*i/n_inc),2*pi*i/n_inc]; % Assign the current task-space postion to dh.Xe (formula given)
    dh = RRR_RDA(dh); % With dh.Xe filled, perform RDA using RRR_RDA
    q(i+1,:) = dh.t_RDA; % Extract the RDA result from the dh object (.t_RDA attribute).
end
%END{GENERATE JOINT DISPLACEMENTS}---------------------------------------------

end

